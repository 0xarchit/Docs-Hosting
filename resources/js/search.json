[[{"l":"Welcome to 0xArchit Documentation","p":["Build Status","This documentation site is built with Retype and features full-text search, dark/light modes, and collaborative editing."]},{"i":"hello-there","l":"\uD83D\uDC4B Hello There!","p":["This website hosts comprehensive documentation for my projects and technical work.","I've created this space to share knowledge, specifications, and insights from my development journey."]},{"l":"Featured Projects","p":["An AI-powered web application that verifies the authenticity of news articles, providing trust scores and analysis."]},{"l":"About Me","p":["I'm Archit Jain (0xArchit), a programmer and student in India passionate about building innovative solutions."]},{"i":"skills-interests","l":"Skills & Interests","p":["MERN Stack Development","Python and AI Implementation","Cyber Security & Ethical Hacking","Open-Source Development","As a self-taught programmer, I've learned most things through reverse engineering and online resources.","When not coding, I enjoy gaming, reading tech news, and following business and crypto markets."]},{"l":"Connect With Me","p":["GitHub: 0xarchit","LinkedIn: 0xarchit","Twitter: 0xarchit","Email: mail@0xarchit.is-a.dev"]},{"i":"what-you-ll-find-here","l":"What You'll Find Here","p":["Project Documentation: Detailed guides for projects I'm working on","Technical Specifications: Architecture diagrams, API references, and implementation details","Tutorials: Step-by-step guides for using my tools and applications","Research Findings: Results and insights from my technical explorations"]},{"l":"Navigation","p":["Use the sidebar to browse through different project categories.","Each section contains comprehensive documentation to help you understand the purpose, implementation, and usage of my projects."]},{"l":"Stay Updated","p":["I regularly update this documentation as my projects evolve.","Bookmark this site to stay updated with the latest information.","Thanks for visiting my documentation hub!"]}],[{"i":"#","p":["Comprehensive overview of the AI-powered Fake News Detector project architecture, components, and implementation details."]},{"l":"Fake News Detector","p":["Explore how this AI-powered application is structured, built, and deployed to help combat misinformation."]},{"l":"Overview","p":["The Fake News Detector is a progressive web application that leverages AI to verify the authenticity of news articles. It provides users with a trust score, detailed analysis, potential biases, and recommendations based on the submitted news content or URL.","Trust Score Analysis with detailed explanations","Supports both Text Input and URL Submission","Category-specific verification algorithms","Progressive Web App for cross-platform use","Client-side caching of previous verifications","Landing Page","Main Interface","App Install PopUp"]},{"l":"Architecture","p":["The project follows a modern frontend-centric architecture with AI-powered backend services:","Technology Stack Overview:","Frontend: React application built with TypeScript and served as a Progressive Web App (PWA)","API Integration: Connects to a Gemini-powered API service for news verification"]},{"l":"System Diagram"},{"l":"Complete Workflow Diagram","p":["The following diagram illustrates the complete flow of a news verification request from user input to displaying results:"]},{"l":"Frontend Implementation","p":["The frontend is a Progressive Web Application (PWA) built with React, TypeScript, and Tailwind CSS. It provides a responsive interface for users to interact with the news verification system."]},{"l":"Key Components"},{"l":"Main Pages","p":["Marketing-focused page introducing the application with animated sections.","The functional page where users can submit news for verification."]},{"l":"Features","p":["Progressive Web App: Install on any device Responsive Design: Works across all screen sizes Smart Caching: Stores previous verification results Modern UI: Animated components using Framer Motion Efficient API Integration: Optimized data transfer"]},{"l":"Component Breakdown"},{"l":"Components","p":["NewsVerifierTool: Manages form state, API calls, results display, errors, loading states, and caching","NewsForm: Handles input toggle (text/URL), news submission, and validation","Results: Displays trust score, analysis, source links, biases, and recommendations","Navigation: Responsive nav bar with mobile collapse behavior","AddToHomeScreen: PWA install button and modal with event handling"]},{"i":"backend--api-endpoints","l":"Backend & API Endpoints","p":["The application uses two backend services with complementary roles:"]},{"l":"Node.js Gemini API Server","p":["Endpoint","Method","Description","/api/verify-news","POST","Main endpoint for news verification","/api/health","GET","Server health check"]},{"l":"Example API Request"},{"l":"Example API Response"},{"l":"FastAPI News Context Backend","p":["/api/analyze","/docs","/health","API documentation (Swagger UI)","Description","Endpoint","GET","Method","Node.js server fetches news context from FastAPI /api/analyze","Node.js server uses Gemini AI to verify and analyze the news","POST","Provides news context for AI verification","Server health check","The frontend calls the Node.js /api/verify-news endpoint","The result is returned to the frontend for display","Uptime Monitoring: 1. Backend Uptime Checker 2. Backup Backend Uptime Checker"]},{"l":"Implementation Details"},{"l":"Caching Implementation"},{"l":"API Integration"},{"l":"Response Schema"},{"l":"Tech Stack"},{"l":"Frontend","p":["React: UI library for building component-based interfaces","TypeScript: For type safety and improved developer experience","Tailwind CSS: For utility-first styling","Framer Motion: For sophisticated animations and transitions","React Router: For client-side routing","Vite: Fast build tool and development server","PWA: Service workers and manifest for installable web app functionality"]},{"i":"tools-infrastructure","l":"Tools & Infrastructure","p":["ESLint: Code quality and consistency","PostCSS: CSS processing with plugins","Cloudflare Pages/Vercel: Potential deployment platforms"]},{"l":"Backend","p":["Node.js & Express: Main Gemini API server ( Gemini API Server)","@google/generative-ai: Gemini AI integration on Node.js","Python & FastAPI: News-context backend ( FastAPI News Context Server)","pydantic: Request validation in FastAPI","aiohttp & BeautifulSoup4: Fetch and parse news data","uvicorn: ASGI server for FastAPI"]},{"l":"PWA Implementation","p":["The project is configured as a Progressive Web App using the vite-plugin-pwa plugin:"]},{"l":"Installation and Local Development"},{"l":"Project Setup"},{"l":"Environment Variables"},{"l":"Usage Guide"},{"l":"Basic Usage","p":["Visit the Website: Go to the deployed application","Select Input Type: Choose between text input or URL","Enter News Content: Paste the news article or URL","Select Category: Choose the relevant news category from education, politics, finance, etc.","Submit: Click \"Verify News\"","Review Results: Examine the trust score, analysis, and recommendations"]},{"l":"Installing as PWA","p":["Visit the website in a compatible browser (Chrome, Edge, Safari, etc.)","Look for the \"Install App\" button or the installation prompt","Add the app to your home screen","Access the app directly from your device's home screen or app drawer"]},{"l":"Project Structure"},{"l":"Development Guidelines"},{"l":"Code Style","p":["Use TypeScript for type safety","Follow functional React patterns with hooks","Implement responsive design for all screen sizes","Use semantic HTML elements for better accessibility","Follow the project's ESLint configuration"]},{"l":"Project Structure","p":["Keep components focused on a single responsibility","Use custom hooks for shared logic","Implement proper error handling throughout the application","Document complex logic with comments","Use consistent naming conventions"]},{"l":"Performance Optimizations","p":["PWA Caching: Critical assets are cached for offline use Client-side Caching: Previous verification results are stored to minimize API calls Lazy Loading: Components and routes could be lazy-loaded for faster initial load Animations: Optimized with hardware acceleration where possible Build Optimization: Production builds are optimized for size and performance"]},{"l":"Future Enhancements","p":["User Accounts – Allow users to save verification history and preferences","Browser Extensions – Create browser extensions for verifying news directly on news websites","Multiple Languages – Support verification in different languages","Explanation Features – Add more detailed explanations of verification methods","Historical Context – Provide historical context for news topics to improve verification accuracy","Citation Verification – Verify citations and references within news articles","Machine Learning Model – Implement a custom machine learning model instead of Gemini that trains automatically on search data via this website"]},{"l":"Troubleshooting"},{"l":"Common Issues","p":["API Connection Errors: Check internet connection and API endpoint configuration","Installation Issues: Ensure HTTPS and PWA support in your browser","Rendering Problems: Clear browser cache to resolve UI issues","Form Submission Errors: Make sure all required form fields are completed"]},{"i":"contact--support","l":"Contact & Support","p":["For questions or assistance, please contact:","GitHub Email"]},{"l":"License","p":["This project is licensed under the MIT License - see the LICENSE file for details."]}]]