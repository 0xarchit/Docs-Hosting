[[{"l":"Welcome to 0xArchit Documentation","p":["Build Status","This documentation site is built with Retype and features full-text search, dark/light modes, and collaborative editing."]},{"i":"hello-there","l":"\uD83D\uDC4B Hello There!","p":["This website hosts comprehensive documentation for my projects and technical work.","I've created this space to share knowledge, specifications, and insights from my development journey."]},{"l":"Featured Projects","p":["Fake News Detector is a React/TypeScript PWA that integrates a Gemini‑powered API and FastAPI backend to verify news authenticity, provide trust scores, and analyze biases.","LearnTrack is a React/TypeScript and FastAPI–based learning management system offering role‑based access, course and assignment management, file uploads, real‑time notifications, and analytics.","Scroll2PDF is a PyQt6 desktop application that automatically scrolls through a webpage, captures and stitches screenshots, and exports them as a multi-page PDF.","CodeArc is a programming-centric AI chatbot companion for web and mobile with local history storage, custom API key support, and Gemini‑powered intelligence."]},{"l":"About Me","p":["I'm Archit Jain (0xArchit), a programmer and student in India passionate about building innovative solutions."]},{"i":"skills-interests","l":"Skills & Interests","p":["MERN Stack Development","Python and AI Implementation","Cyber Security & Ethical Hacking","Open-Source Development","As a self-taught programmer, I've learned most things through reverse engineering and online resources.","When not coding, I enjoy gaming, reading tech news, and following business and crypto markets."]},{"l":"Connect With Me","p":["GitHub: 0xarchit","LinkedIn: 0xarchit","Twitter: 0xarchit","Email: mail@0xarchit.is-a.dev"]},{"i":"what-you-ll-find-here","l":"What You'll Find Here","p":["Project Documentation: Detailed guides for projects I'm working on","Technical Specifications: Architecture diagrams, API references, and implementation details","Tutorials: Step-by-step guides for using my tools and applications","Research Findings: Results and insights from my technical explorations"]},{"l":"Navigation","p":["Use the sidebar to browse through different project categories.","Each section contains comprehensive documentation to help you understand the purpose, implementation, and usage of my projects."]},{"l":"Stay Updated","p":["I regularly update this documentation as my projects evolve.","Bookmark this site to stay updated with the latest information.","Thanks for visiting my documentation hub!"]}],[{"i":"#","p":["Comprehensive overview of the AI-powered Fake News Detector project architecture, components, and implementation details."]},{"l":"Fake News Detector","p":["Explore how this AI-powered application is structured, built, and deployed to help combat misinformation."]},{"l":"Overview","p":["The Fake News Detector is a progressive web application that leverages AI to verify the authenticity of news articles. It provides users with a trust score, detailed analysis, potential biases, and recommendations based on the submitted news content or URL.","Trust Score Analysis with detailed explanations","Supports both Text Input and URL Submission","Category-specific verification algorithms","Progressive Web App for cross-platform use","Client-side caching of previous verifications","Landing Page","Main Interface","App Install PopUp"]},{"l":"Architecture","p":["The project follows a modern frontend-centric architecture with AI-powered backend services:","Technology Stack Overview:","Frontend: React application built with TypeScript and served as a Progressive Web App (PWA)","API Integration: Connects to a Gemini-powered API service for news verification"]},{"l":"System Diagram"},{"l":"Complete Workflow Diagram","p":["The following diagram illustrates the complete flow of a news verification request from user input to displaying results:"]},{"l":"Frontend Implementation","p":["The frontend is a Progressive Web Application (PWA) built with React, TypeScript, and Tailwind CSS. It provides a responsive interface for users to interact with the news verification system."]},{"l":"Key Components"},{"l":"Main Pages","p":["Marketing-focused page introducing the application with animated sections.","The functional page where users can submit news for verification."]},{"l":"Features","p":["Progressive Web App: Install on any device","Responsive Design: Works across all screen sizes","Smart Caching: Stores previous verification results","Modern UI: Animated components using Framer Motion","Efficient API Integration: Optimized data transfer"]},{"l":"Component Breakdown"},{"l":"Components","p":["NewsVerifierTool: Manages form state, API calls, results display, errors, loading states, and caching","NewsForm: Handles input toggle (text/URL), news submission, and validation","Results: Displays trust score, analysis, source links, biases, and recommendations","Navigation: Responsive nav bar with mobile collapse behavior","AddToHomeScreen: PWA install button and modal with event handling"]},{"i":"backend--api-endpoints","l":"Backend & API Endpoints","p":["The application uses two backend services with complementary roles:"]},{"l":"Node.js Gemini API Server","p":["Endpoint","Method","Description","/api/verify-news","POST","Main endpoint for news verification","/api/health","GET","Server health check"]},{"l":"Example API Request"},{"l":"Example API Response"},{"l":"FastAPI News Context Backend","p":["/api/analyze","/docs","/health","API documentation (Swagger UI)","Description","Endpoint","GET","Method","Node.js server fetches news context from FastAPI /api/analyze","Node.js server uses Gemini AI to verify and analyze the news","POST","Provides news context for AI verification","Server health check","The frontend calls the Node.js /api/verify-news endpoint","The result is returned to the frontend for display","Uptime Monitoring: 1. Backend Uptime Checker 2. Backup Backend Uptime Checker"]},{"l":"Implementation Details"},{"l":"Caching Implementation"},{"l":"Gemini Processing","p":["Gemini AI orchestrates the core verification pipeline by:","Fetching recent news context from the FastAPI endpoint (/api/analyze), which returns parsed headlines, descriptions, sources, and dates.","Translating user‑submitted news into English (if needed).","Computing text similarity using algorithms such as:","TF‑IDF (Term Frequency-Inverse Document Frequency) + Cosine Similarity: We vectorize both the user input and each context document to spot overlapping terms and measure relevance.","Semantic Embeddings: Leveraging pre‑trained language models to capture deeper contextual meaning beyond exact term matches.","Keyword & Entity Matching: Identifying shared entities (names, dates, locations) between the input and context.","Aggregating these scores to derive a final trustScore(0–100).","Generating a concise analysis, listing matched sources in sourceandrelated, detecting biases, and crafting a recommendation."]},{"l":"API Integration"},{"l":"Response Schema"},{"l":"Tech Stack"},{"l":"Frontend","p":["React: UI library for building component-based interfaces","TypeScript: For type safety and improved developer experience","Tailwind CSS: For utility-first styling","Framer Motion: For sophisticated animations and transitions","React Router: For client-side routing","Vite: Fast build tool and development server","PWA: Service workers and manifest for installable web app functionality"]},{"i":"tools-infrastructure","l":"Tools & Infrastructure","p":["ESLint: Code quality and consistency","PostCSS: CSS processing with plugins","Cloudflare Pages/Vercel: Potential deployment platforms"]},{"l":"Backend","p":["Node.js & Express: Main Gemini API server ( Gemini API Server)","@google/generative-ai: Gemini AI integration on Node.js","Python & FastAPI: News-context backend ( FastAPI News Context Server)","pydantic: Request validation in FastAPI","aiohttp & BeautifulSoup4: Fetch and parse news data","uvicorn: ASGI server for FastAPI"]},{"l":"PWA Implementation","p":["The project is configured as a Progressive Web App using the vite-plugin-pwa plugin:"]},{"l":"Installation and Local Development"},{"l":"Project Setup"},{"l":"Environment Variables"},{"l":"Usage Guide"},{"l":"Basic Usage","p":["Visit the Website: Go to the deployed application","Select Input Type: Choose between text input or URL","Enter News Content: Paste the news article or URL","Select Category: Choose the relevant news category from education, politics, finance, etc.","Submit: Click \"Verify News\"","Review Results: Examine the trust score, analysis, and recommendations"]},{"l":"Installing as PWA","p":["Visit the website in a compatible browser (Chrome, Edge, Safari, etc.)","Look for the \"Install App\" button or the installation prompt","Add the app to your home screen","Access the app directly from your device's home screen or app drawer"]},{"l":"Project Structure"},{"l":"Development Guidelines"},{"l":"Code Style","p":["Use TypeScript for type safety","Follow functional React patterns with hooks","Implement responsive design for all screen sizes","Use semantic HTML elements for better accessibility","Follow the project's ESLint configuration"]},{"l":"Project Structure","p":["Keep components focused on a single responsibility","Use custom hooks for shared logic","Implement proper error handling throughout the application","Document complex logic with comments","Use consistent naming conventions"]},{"l":"Performance Optimizations","p":["PWA Caching: Critical assets are cached for offline use Client-side Caching: Previous verification results are stored to minimize API calls Lazy Loading: Components and routes could be lazy-loaded for faster initial load Animations: Optimized with hardware acceleration where possible Build Optimization: Production builds are optimized for size and performance"]},{"l":"Future Enhancements","p":["User Accounts – Allow users to save verification history and preferences","Browser Extensions – Create browser extensions for verifying news directly on news websites","Multiple Languages – Support verification in different languages","Explanation Features – Add more detailed explanations of verification methods","Historical Context – Provide historical context for news topics to improve verification accuracy","Citation Verification – Verify citations and references within news articles","Machine Learning Model – Implement a custom machine learning model instead of Gemini that trains automatically on search data via this website"]},{"l":"Troubleshooting"},{"l":"Common Issues","p":["API Connection Errors: Check internet connection and API endpoint configuration","Installation Issues: Ensure HTTPS and PWA support in your browser","Rendering Problems: Clear browser cache to resolve UI issues","Form Submission Errors: Make sure all required form fields are completed"]},{"i":"contact--support","l":"Contact & Support","p":["For questions or assistance, please contact:","GitHub Email"]},{"l":"License","p":["This project is licensed under the MIT License - see the LICENSE file for details."]}],[{"i":"#","p":["Complete documentation for the LearnTrack learning management system with role-based access, course management, and analytics."]},{"l":"LearnTrack","p":["GitHub: 0xarchit/LearnTrack","LearnTrack is a comprehensive learning management system designed for educational institutions with role-based access for students, faculty, and administrators. As this project was built using SQLite with basic encryption for a short-duration college project, it has some security vulnerabilities. I plan to improve the security features in future updates."]},{"l":"Live Demo","p":["Frontend: https://learntrack.pages.dev- deployed on Cloudflare Pages","Backend: deployed using Docker on Render"]},{"l":"Screenshots","p":["Landing Page","Student Panel Faculty Panel Admin Panel","Backend (FastAPI Swagger UI)"]},{"l":"Problem Statement","p":["Learn Track streamlines course access, submission tracking, and academic progress for students and faculty. It supports resource uploading, grading, feedback, and certificate downloads. Personalized dashboards give real-time academic analytics. The system supports semester-based enrollment, auto-notifications, and bulk result uploads."]},{"l":"User Responsibilities","p":["Student","Faculty","Admin","Enroll in courses and view syllabus","Upload lecture content","Approve new course creation","Submit assignments and check grades","Grade submissions and provide remarks","Manage user permissions","Access study material and feedback","Track student performance","Generate result analysis and performance reports"]},{"l":"Allowed Tools","p":["Frontend: React, framer-motion, Tailwind CSS, etc.","Backend: Python (FastAPI) with SQLite3"]},{"l":"Overview","p":["LearnTrack is a comprehensive learning management system that streamlines course access, submission tracking, and academic progress for students and faculty. It provides a robust platform with personalized dashboards offering real-time analytics and supports semester-based enrollment, auto-notifications, and bulk result uploads."]},{"l":"Features","p":["Role-based Access- Student, faculty, and admin portals","Course Management- CRUD operations and enrollment tracking","Assignment System- Creation, submission, and grading workflow","File Management- Materials and submissions handling","Real-time Notifications- Role-targeted messaging system","Analytics- Performance metrics and progress tracking","Reporting- Customized reports for different stakeholders","Scheduling- Course timeline and assignment due dates","Theming- Dark/light theme support","Responsive Design- Mobile-friendly interface","Accessibility- WCAG-compliant components"]},{"l":"Tech Stack","p":["Frontend","Backend","Authentication","React - UI library for building component-based interfaces","FastAPI - Modern, high-performance Python web framework","Role-based Access Control - Permission management","TypeScript - For type safety and improved developer experience","SQLite - Lightweight relational database","Bcrypt - Password hashing","Framer Motion - For sophisticated animations and transitions","Pydantic - Data validation and settings management","Tailwind CSS - For utility-first styling","Uvicorn - ASGI server implementation","React Router - For client-side routing"]},{"l":"Folder Structure"},{"l":"Getting Started"},{"l":"Prerequisites","p":["Node.js >= 18","pnpm or npm","Python 3.9+","pip"]},{"l":"Installation"},{"i":"prebuilt-docker-image-optional","l":"Prebuilt Docker Image (Optional)","p":["For quick setup, you can use our pre-built Docker image"]},{"l":"Running the Application","p":["Open http://localhost:5173 in your browser."]},{"l":"Demo Logins","p":["For testing purposes, you can use the following demo accounts:","Role","Email","Password","Student","student@0xarchit.is-a.dev","12345678","Faculty","faculty@0xarchit.is-a.dev","Admin","admin@0xarchit.is-a.dev"]},{"l":"Frontend"},{"i":"frameworks-libraries","l":"Frameworks & Libraries","p":["React & TypeScript- Core UI framework with type safety","React Router v6- For client-side routing and navigation","Framer Motion- For sophisticated animations and transitions","Tailwind CSS- For utility-first styling approach","Context API- For state management (Auth, Theme, Notifications)"]},{"i":"routing-layouts","l":"Routing & Layouts"},{"l":"Contexts","p":["User State- Current user object with profile data","Role Management- Student, faculty, or admin role handling","Dark/Light Mode- Theme preference management","Color Schemes- Primary and accent color customization","Local Storage- Persistent theme preferences","Toast Notifications- For system messages","Real-time Updates- WebSocket connection (future)","Notification Center- Centralized notification management"]},{"i":"pages-components","l":"Pages & Components","p":["Admin Pages","AssignmentCreation - Create & grade assignments","Assignments - Viewing & submission","Core Pages","CourseApproval - Review & approve courses","CourseCreation - Create & manage course content","Courses - Course listing & enrollment","Dashboard - Role-specific metrics","Faculty Pages","Grades - Performance tracking & feedback","LandingPage - Marketing page","Login/Register/ForgotPassword - Authentication","Materials - Study resources & downloads","MaterialUpload - Upload & organize resources","Profile - User information & preferences","ReportGeneration - Analytics & performance reports","StudentProgress - Track student performance","UserManagement - Create, edit, deactivate users"]},{"l":"Backend"},{"i":"framework-setup","l":"Framework & Setup","p":["FastAPI- High-performance Python web framework","CORS Middleware- For secure cross-origin requests","StaticFiles- For serving uploaded files","SQLite Helper- For database connection and migrations"]},{"l":"API Endpoints","p":["/api/assignments","/api/assignments/{id}/submissions","/api/courses","/api/courses/{id}","/api/enroll","/api/enrollments","/api/grades","/api/login","/api/materials","/api/register","/api/reports/performance","/api/submissions/{id}/grade","Access course materials","Access interactive API documentation at http://localhost:5000/docs after starting the backend","Authenticate and get token","Create new assignment","Create new course","Create new user account","DELETE","Description","Endpoint","Enroll in a course","Generate performance reports","GET","Get course details","Grade submission","List all available courses","List course assignments","List user enrollments","Method","POST","PUT","Remove course","Submit assignment work","Unenroll from course","Update course details","View student grades"]},{"l":"Database"},{"l":"Schema","p":["assignments","courses","enrollments","grades","id, message, type, target_role, created_at","id, name, email, password, role, department, joinDate","id, title, course_id, description, due_date","id, title, course_id, type, url","id, title, instructor_id, description, status","id, user_id, assignment_id, file_url, grade","id, user_id, course_id, grade","Key Columns","materials","notifications","submissions","Table","user_id, course_id","users"]},{"l":"ER Diagram"},{"l":"Migrations","p":["On startup, init_db() adds missing columns and migrates data."]},{"l":"Workflows"},{"l":"Authentication Flow"},{"l":"Course Management Flow"},{"i":"assignment-submission-grading-flow","l":"Assignment Submission & Grading Flow"},{"l":"Notification Flow"},{"l":"Diagrams"},{"l":"System Overview"},{"l":"Frontend Routing"},{"l":"Backend API Flow"},{"l":"Environment Variables"},{"l":"Advanced Usage"},{"l":"API Integration Example"},{"l":"Custom Workflow Integration","p":["LearnTrack can be extended with custom workflows by implementing additional API endpoints and frontend components. Example use cases include:","Calendar integration for scheduling","Discussion forums for each course","Video conferencing for virtual classrooms","Advanced analytics dashboards"]},{"l":"Troubleshooting","p":["Connection Errors: Verify SQLite database file exists and is not corrupted","Foreign Key Constraints: Ensure related records exist before creating dependent records","Size Limitations: Default upload limit is 5MB","Supported Formats: Check allowed file extensions (.pdf, .doc, .jpg, etc.)","Clear Cache: Browser caching may cause stale UI state","Check Network: Verify backend connectivity"]},{"i":"contact-support","l":"Contact & Support","p":["For questions, assistance, or contributions, please reach out:","GitHub Email LinkedIn"]},{"l":"License","p":["This project is licensed under the MIT License - see the LICENSE file for details."]}],[{"i":"#","p":["Auto-Scrolling Webpage Capture to PDF with PyQt6"]},{"l":"Auto-Scrolling Webpage Capture to PDF","p":["Python PyQt6 PDF","GitHub: 0xarchit/Scroll-To-Pdf","A desktop application built with PyQt6 that automatically scrolls through a webpage, captures screenshots, stitches them, and exports the result as a multi-page PDF."]},{"l":"Screenshots","p":["Software Interface"]},{"l":"Overview","p":["When you need a PDF of an entire webpage (including content below the fold), manual scrolling and screenshotting is tedious. AutoScrollCapturePDF automates:","Scrolling through the page","Taking successive screenshots","Detecting end of page via image similarity","Concatenating and saving as PDF","Ideal for long articles, reports, dashboards, and documentation pages."]},{"l":"Features","p":["Configurable scroll delay, height, and max scroll count","Automatic end-of-page detection (image similarity threshold)","Preview stitched result before export","Primary and fallback PDF export methods (Pillow and img2pdf)","Dark-themed, responsive PyQt6 GUI","Cross-platform (Windows/macOS/Linux)"]},{"l":"Installation","p":["Clone this repository:","(Optional) Create a virtual environment:","Install dependencies:","Ensure app_icon.ico sits alongside main.py in the project root."]},{"l":"Usage"},{"l":"Launching the Application","p":["The main window appears. Adjust settings then click Start Capture."]},{"l":"Settings Panel","p":["Setting","Description","Delay between scrolls","Seconds to wait after each scroll (0.1 - 5.0)","Max scrolls (0 = unlimited)","Maximum number of scroll actions before stopping","Scroll height (0 = auto)","Vertical pixels per scroll (0 uses default heights)","Fullscreen mode (F11)","Toggle auto height for full-screen vs windowed browsing"]},{"l":"Capture Workflow","p":["Click Start Capture→ 3‑second countdown → window minimizes","Focus browser and let it scroll+capture automatically","Status bar displays live updates and screenshot count","Capture stops on page end or reaching max scrolls","Window restores with Preview, Save, and Clear options"]},{"l":"Previewing","p":["Click Preview Screenshots to open a stitched image of all screenshots. Close preview to return."]},{"l":"Exporting to PDF","p":["Click Save as PDF","Choose destination file path (.pdf)","Application attempts Pillow export; on failure, uses img2pdf fallback"]},{"l":"Architecture","p":["main.py: GUI, settings, thread orchestration","CaptureThread: Runs scrolling & screenshot logic on background thread","Image Similarity: Grayscale thumbnails compared to detect end of page","PDF Export: Multi-page via Pillow or img2pdf fallback"]},{"l":"How It Works","p":["Initial Delay: 3 seconds to switch focus to browser","Scroll Loop:","Grab full-screen screenshot","Compare with previous (100×100 grayscale threshold)","If similar beyond 95%, capture final part and exit","Else, scroll down by configured height and repeat","Signal UI: screenshot_taken, status_update, capture_complete signals update progress"]},{"l":"Configuration Parameters","p":["0","0.5","10","boolean","counts","Default","delay","Description","False","is_fullscreen","manual_height","max_scrolls","Override auto scroll height if > 0","Parameter","pixels","seconds","Unit","Use fullscreen height (1300px) vs windowed (1245px)","Wait time between scroll & capture","Zero = infinite until end-of-page detected"]},{"l":"Packaging as Executable","p":["This project includes a PyInstaller spec ( main.spec):","Look under dist/ or build/ for the generated executable."]},{"l":"Troubleshooting","p":["Blank screenshots: Ensure browser window is not minimized and is in focus.","OCR or hidden UI elements: Use headless capture libraries or adjust scroll offsets.","Permission errors: On macOS, grant screen recording privileges.","PDF Export fails: Install img2pdf via pip install img2pdf."]},{"l":"FAQ","p":["Q: Can I capture only part of a page?","A: Not currently; feature coming soon (scroll region selection).","Q: Why are some screenshots repeated?","A: Overlapping scroll height may cause repeats. Increase delay or adjust scroll height.","Q: How do I change similarity threshold?","A: Hardcoded to 0.95; modify images_are_similar() in CaptureThread."]},{"l":"Contributing","p":["Fork the repo","Create a feature branch ( git checkout -b feature/YourFeature)","Commit your changes ( git commit -m 'Add feature')","Push to your branch ( git push origin feature/YourFeature)","Open a Pull Request","Please follow PEP8 and include tests for new functionality."]},{"l":"License","p":["This project is licensed under the MIT License. See LICENSE for details."]}],[{"i":"#","p":["Programming‑centric AI chatbot companion for web and mobile with local storage, custom API keys, and Gemini‑powered intelligence."]},{"i":"codearc-programming-centric-ai-chatbot-companion","l":"CodeArc: Programming‑Centric AI Chatbot Companion","p":["React AI Capacitor","GitHub: 0xarchit/CodeArc"]},{"l":"Overview","p":["CodeArc is a programming-focused chatbot designed to explain concepts and help you learn, just like a knowledgeable friend. It offers an intuitive and feature-packed experience across both mobile and web platforms."]},{"l":"Key Features","p":["Local Storage for History and Context: Access your previous chats directly on your device (browser for the web version) without relying on external servers.","Custom API Keys: Configure your own API keys for a personalized and secure experience.","Cross-Platform Compatibility: Available for both mobile apps and websites, ensuring you can code and learn on the go.","Easy Chat Management: Effortlessly delete chats whenever needed.","Powered By Gemini: CodeArc is proudly powered by Gemini 2.0 Flash, bringing cutting-edge AI to your fingertips for a smarter and friendlier chatbot experience."]},{"l":"Tech Stack","p":["CodeArc is built using cutting-edge technologies to deliver a seamless and efficient experience:","React: For crafting an interactive and responsive user interface.","TypeScript: Ensuring type safety and a smoother development process.","@google/generative-ai: Integrating advanced AI-driven features.","Capacitor: Enabling hybrid app development for cross-platform functionality.","Zustand: Simplifying state management with a lightweight and intuitive approach.","react-loading-indicators: Adding polished loading visuals for an enhanced user experience."]},{"l":"Privacy First","p":["Your chat history is stored locally on your device or browser, giving you complete control over your data.","First Screen","Chat Window"]},{"l":"Get Started","p":["Download the App: CodeArc Releases","Try the Web Version: CodeArc Website"]},{"l":"Before Downloading"},{"i":"how-to-get-your-api-key","l":"How to Get Your API Key?","p":["Visit Google AI Studio.","Sign in with your Google account.","Click on the \"Create API key\" button.","Copy your new API key.","\uD83D\uDCDD Note: Keep your API key secure and never share it publicly! This api key is upto you only we dont collect or store them"]},{"l":"Upcoming Features","p":["Download Chat as PDF: Soon, you'll be able to save your chat conversations as PDF files for easy sharing and offline access.","Update Notification Fix: Automatic update notifications in the app for a seamless user experience."]},{"l":"License","p":["This project is licensed under the MIT License - see the LICENSE file for details."]}]]